package com.crud.rest.beans;
// Generated May 26, 2017 2:03:11 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIgnore;

/**
 * Movies generated by hbm2java
 */
@Entity
@Table(name="movies"
    ,catalog="mywebsite"
)
public class Movies  implements java.io.Serializable {


     private Long movieId;
     private String name;
     private Integer year;
     private Double duration;
     private Date releaseDate;
     private Integer castCount;
     private Character status;
     private Date createdDate;
     private Set<MovieGenere> movieGeneres = new HashSet<MovieGenere>(0);
     private Set<MoviePlot> moviePlots = new HashSet<MoviePlot>(0);
     private Set<MovieDirectors> movieDirectorses = new HashSet<MovieDirectors>(0);
     private Set<MovieSimilar> movieSimilarsForSimilarMovieId = new HashSet<MovieSimilar>(0);
     private Set<MovieSimilar> movieSimilarsForMovieId = new HashSet<MovieSimilar>(0);
     private Set<MovieStars> movieStarses = new HashSet<MovieStars>(0);
     private Set<MovieProducers> movieProducerses = new HashSet<MovieProducers>(0);

    public Movies() {
    }

    public Movies(String name, Integer year, Double duration, Date releaseDate, Integer castCount, Character status, Date createdDate, Set<MovieGenere> movieGeneres, Set<MoviePlot> moviePlots, Set<MovieDirectors> movieDirectorses, Set<MovieSimilar> movieSimilarsForSimilarMovieId, Set<MovieSimilar> movieSimilarsForMovieId, Set<MovieStars> movieStarses, Set<MovieProducers> movieProducerses) {
       this.name = name;
       this.year = year;
       this.duration = duration;
       this.releaseDate = releaseDate;
       this.castCount = castCount;
       this.status = status;
       this.createdDate = createdDate;
       this.movieGeneres = movieGeneres;
       this.moviePlots = moviePlots;
       this.movieDirectorses = movieDirectorses;
       this.movieSimilarsForSimilarMovieId = movieSimilarsForSimilarMovieId;
       this.movieSimilarsForMovieId = movieSimilarsForMovieId;
       this.movieStarses = movieStarses;
       this.movieProducerses = movieProducerses;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="MOVIE_ID", unique=true, nullable=false)
    public Long getMovieId() {
        return this.movieId;
    }
    
    public void setMovieId(Long movieId) {
        this.movieId = movieId;
    }

    
    @Column(name="NAME", length=200)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="YEAR")
    public Integer getYear() {
        return this.year;
    }
    
    public void setYear(Integer year) {
        this.year = year;
    }

    
    @Column(name="DURATION", precision=22, scale=0)
    public Double getDuration() {
        return this.duration;
    }
    
    public void setDuration(Double duration) {
        this.duration = duration;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="RELEASE_DATE", length=19)
    public Date getReleaseDate() {
        return this.releaseDate;
    }
    
    public void setReleaseDate(Date releaseDate) {
        this.releaseDate = releaseDate;
    }

    
    @Column(name="CAST_COUNT")
    public Integer getCastCount() {
        return this.castCount;
    }
    
    public void setCastCount(Integer castCount) {
        this.castCount = castCount;
    }

    
    @Column(name="STATUS", length=1)
    public Character getStatus() {
        return this.status;
    }
    
    public void setStatus(Character status) {
        this.status = status;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="CREATED_DATE", length=19)
    public Date getCreatedDate() {
        return this.createdDate;
    }
    
    public void setCreatedDate(Date createdDate) {
        this.createdDate = createdDate;
    }
@JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="movies")
    public Set<MovieGenere> getMovieGeneres() {
        return this.movieGeneres;
    }
    
    public void setMovieGeneres(Set<MovieGenere> movieGeneres) {
        this.movieGeneres = movieGeneres;
    }
    @JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="movies")
    public Set<MoviePlot> getMoviePlots() {
        return this.moviePlots;
    }
    
    public void setMoviePlots(Set<MoviePlot> moviePlots) {
        this.moviePlots = moviePlots;
    }
    @JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="movies")
    public Set<MovieDirectors> getMovieDirectorses() {
        return this.movieDirectorses;
    }
    
    public void setMovieDirectorses(Set<MovieDirectors> movieDirectorses) {
        this.movieDirectorses = movieDirectorses;
    }
    @JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="moviesBySimilarMovieId")
    public Set<MovieSimilar> getMovieSimilarsForSimilarMovieId() {
        return this.movieSimilarsForSimilarMovieId;
    }
    
    public void setMovieSimilarsForSimilarMovieId(Set<MovieSimilar> movieSimilarsForSimilarMovieId) {
        this.movieSimilarsForSimilarMovieId = movieSimilarsForSimilarMovieId;
    }
    @JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="moviesByMovieId")
    public Set<MovieSimilar> getMovieSimilarsForMovieId() {
        return this.movieSimilarsForMovieId;
    }
    
    public void setMovieSimilarsForMovieId(Set<MovieSimilar> movieSimilarsForMovieId) {
        this.movieSimilarsForMovieId = movieSimilarsForMovieId;
    }
    @JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="movies")
    public Set<MovieStars> getMovieStarses() {
        return this.movieStarses;
    }
    
    public void setMovieStarses(Set<MovieStars> movieStarses) {
        this.movieStarses = movieStarses;
    }
    @JsonIgnore
@OneToMany(fetch=FetchType.LAZY, mappedBy="movies")
    public Set<MovieProducers> getMovieProducerses() {
        return this.movieProducerses;
    }
    
    public void setMovieProducerses(Set<MovieProducers> movieProducerses) {
        this.movieProducerses = movieProducerses;
    }




}


